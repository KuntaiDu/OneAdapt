
# model and log directory
runs_dir: runs/
# resume_dir: argument from command line
# run_dir: automatically generated, storing checkpoints, tf event files, etc.

# inference
model_to_load: checkpoint.pth.tar

# data loader
num_workers: 4
grayscale: False
fillempty: True
# num_classes: inferred from label_dict, including background and placeholder (if any)

# training data augmentation params
random_crop_height: 1  # (0, 1], ratio of random crop
random_crop_width: 1  # (0, 1], ratio of random crop
brightness: 0.3
contrast: 0.3
saturation: 0.3
hue: 0.3
blur_prob: 0.3
blur_times: 2
vertical_flip: 0.5
horizontal_flip: 0.5
resize_height: 800  # size of tensors fed into Mask R-CNN
resize_width: 800  # size of tensors fed into Mask R-CNN

# training schedule
epochs: 50
batch_size_per_gpu: 10
batch_size_multiplier: 1
# num_gpus: inferred from torch.cuda.device_count()
# batch_size: inferred from num_gpus and batch_size_per_gpu

# model parameters
model_name: maskrcnn_resnet50_fpn
coco_pretrained: True
swap_model_predictors: False  # always True if num_classes differ

# optimizer parameters
lr: 0.0005

# evaluation parameters
mask_threshold: 0.5
key_metric_name: AP50

# visualization parameters
visual_train: True
prob_visualization: 0.01
num_visualization: 5
visual_score_cutoff: 0.9
bbox_outline: [255, 255, 255, 255]  # white
bbox_width: 3  # in pixels
label_fill: [255, 255, 255, 255]  # white
up_scale: 1  # to improve visualization quality
font: maskrcnn/utils/fonts/UbuntuMono-B.ttf
font_size: 20